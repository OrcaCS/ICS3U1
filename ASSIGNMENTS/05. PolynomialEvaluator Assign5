import java.util.Scanner;
import java.util.StringTokenizer;

public class PolynomialEvaluator {
    public static void main(String[] args) throws Exception {
        Scanner keyboard = new Scanner(System.in);
        
        double result = 0;
        double coefficient = 1;
        int power = 1;
        
        System.out.println("\n\nEnter a polynomial that starts with 'f(x)=': ");
        String polynomial = keyboard.nextLine();
        System.out.println("Enter a value for x: ");
        int x = keyboard.nextInt();

        keyboard.close();
        
        polynomial = polynomial.substring(polynomial.indexOf("=") + 1); // removes f(x)=
        
        StringTokenizer poly = new StringTokenizer(polynomial, " "); // splits into tokens by spaces
        
        while (poly.hasMoreTokens()) {
            String token = poly.nextToken();
        
            if (token.contains("x")) { // for terms with x
                if (token.contains("^")) { // for terms with power
                    power = Integer.parseInt(token.substring(token.indexOf("^") + 1)); // grabs the int after ^ (the power value)
                }
                if (token.contains("+x")) { // if there is "no" coefficient (coeff is 1)
                    coefficient = 1;
                } else if (token.contains("-x")) { // if there is "no" coefficient (coeff is -1)
                    coefficient = -1;
                } else { // regular if coefficient is there
                coefficient = Double.parseDouble(token.substring(0, token.indexOf("x")));
                }
            } else { // if term is just a number with no x or power
                coefficient = Double.parseDouble(token);
                power = 0; // so x input is NOT touched
            }
            
            result += coefficient * Math.pow(x, power); // calculates every term w new variable values for coefficient and power
            
        }
        System.out.println("\nf(" + x + ")=" + result);
    }
}
